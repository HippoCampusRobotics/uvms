// Copyright (C) 2023  Niklas Trekel

// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.

// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.

#ifndef BLUEROV_CTRL_MANIPULATOR_COMPENSATION_HPP
#define BLUEROV_CTRL_MANIPULATOR_COMPENSATION_HPP
#include <eigen3/Eigen/Dense>
#include "uvms_common/param_utils.hpp"

namespace bluerov_ctrl {
    class ManipulatorCompensation{
    public:
        ManipulatorCompensation();

        void setBuoyancyParams(const double &mass, const Eigen::Vector3d &origin){
            added_buoyancy_mass_  = mass;
            buoyancy_origin_ = origin;
        }

        void update(const Eigen::Quaterniond &orientation, Eigen::Vector3d &force, Eigen::Vector3d &torque);

        //! Set the force to be generated by the AUV to counter the force applied by the moving manipulator.
        //! Inputs represent the forces applied by the manipulator onto the AUV in the AUV COS
        void setCompensationForce(const double &x, const double &y,
                                  const double &z);

        //! Set the torque to be generated by the AUV to counter the torque applied by the moving manipulator.
        //! Inputs represent the torque applied by the manipulator onto the AUV in the AUV COS
        void setCompensationTorque(const double &x, const double &y,
                                  const double &z);


    private:
        // use array instead of vector to simplify coefficient wise multiplication
        Eigen::Vector3d buoyancy_origin_; //!< position w.r.t. AUV coordinate system of the added buoyancy mass
        double added_buoyancy_mass_; //!< additional buoyancy mass added to the AUV to compensate the manipulator
        Eigen::Vector3d counter_force_;
        Eigen::Vector3d counter_torque_;
    };



}
#endif //BLUEROV_CTRL_MANIPULATOR_COMPENSATION_HPP
